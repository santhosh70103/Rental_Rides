// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rentrides_hexa.Model;

#nullable disable

namespace Rentrides_hexa.Migrations
{
    [DbContext(typeof(CarRentalDbContext))]
    partial class CarRentalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Rentrides_hexa.Model.Admin", b =>
                {
                    b.Property<int>("Admin_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Admin_ID"));

                    b.Property<string>("Admin_Email")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Admin_Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Admin_Password")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Admin_PhoneNo")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Admin_ID");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("Rentrides_hexa.Model.Car_Details", b =>
                {
                    b.Property<int>("Car_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Car_Id"));

                    b.Property<int?>("Available_Cars")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Available_Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Car_Image")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Car_Model_Year")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Car_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Car_Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Fuel_Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("No_of_seats")
                        .HasColumnType("int");

                    b.Property<decimal?>("Penalty_Amt")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("Rental_Price_PerDay")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("Rental_Price_PerHour")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Transmission_type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Car_Id");

                    b.ToTable("Car_Details");
                });

            modelBuilder.Entity("Rentrides_hexa.Model.Customers", b =>
                {
                    b.Property<int>("Customer_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Customer_Id"));

                    b.Property<string>("Customer_Email")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Customer_Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Customer_Password")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Customer_PhoneNo")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Customer_Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Rentrides_hexa.Model.Order", b =>
                {
                    b.Property<int>("Order_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Order_Id"));

                    b.Property<int?>("Car_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Order_Status")
                        .HasColumnType("int");

                    b.Property<int?>("Rental_Id")
                        .HasColumnType("int");

                    b.Property<decimal?>("Total_Price")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Order_Id");

                    b.HasIndex("Rental_Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Rentrides_hexa.Model.Payment", b =>
                {
                    b.Property<int>("Payment_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Payment_Id"));

                    b.Property<string>("Payment_Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Payment_Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Rental_Id")
                        .HasColumnType("int");

                    b.Property<decimal?>("Total_Amount")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Payment_Id");

                    b.HasIndex("Rental_Id");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("Rentrides_hexa.Model.Refund", b =>
                {
                    b.Property<int>("Refund_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Refund_Id"));

                    b.Property<decimal>("Refund_Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Refund_Status")
                        .HasColumnType("int");

                    b.Property<int>("Rental_Id")
                        .HasColumnType("int");

                    b.HasKey("Refund_Id");

                    b.HasIndex("Rental_Id");

                    b.ToTable("Refund");
                });

            modelBuilder.Entity("Rentrides_hexa.Model.Rented_Car", b =>
                {
                    b.Property<int>("Rental_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Rental_Id"));

                    b.Property<int?>("Car_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Customer_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Days_of_Rent")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Expected_Return_Date")
                        .HasColumnType("date");

                    b.Property<string>("Payment_Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Penalty_PerDay")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("Rented_Date")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal?>("Total_Price")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Rental_Id");

                    b.HasIndex("Car_Id");

                    b.HasIndex("Customer_ID");

                    b.ToTable("Rented_Car");
                });

            modelBuilder.Entity("Rentrides_hexa.Model.Returned_Car", b =>
                {
                    b.Property<int>("Return_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Return_Id"));

                    b.Property<DateTime?>("Actual_Return_Date")
                        .HasColumnType("date");

                    b.Property<int?>("Difference_In_Days")
                        .HasColumnType("int");

                    b.Property<decimal?>("Penalty")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("Rental_Id")
                        .HasColumnType("int");

                    b.HasKey("Return_Id");

                    b.HasIndex("Rental_Id");

                    b.ToTable("Returned_Car");
                });

            modelBuilder.Entity("Rentrides_hexa.Model.User_Feedback", b =>
                {
                    b.Property<int>("Feedback_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Feedback_Id"));

                    b.Property<int?>("Car_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Customer_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Feedback_Point")
                        .HasColumnType("int");

                    b.Property<string>("Feedback_Query")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.HasKey("Feedback_Id");

                    b.HasIndex("Car_Id");

                    b.HasIndex("Customer_Id");

                    b.ToTable("User_Feedback");
                });

            modelBuilder.Entity("Rentrides_hexa.Model.Order", b =>
                {
                    b.HasOne("Rentrides_hexa.Model.Rented_Car", "Rented_Car")
                        .WithMany("Orders")
                        .HasForeignKey("Rental_Id");

                    b.Navigation("Rented_Car");
                });

            modelBuilder.Entity("Rentrides_hexa.Model.Payment", b =>
                {
                    b.HasOne("Rentrides_hexa.Model.Rented_Car", "Rented_Car")
                        .WithMany("Payments")
                        .HasForeignKey("Rental_Id");

                    b.Navigation("Rented_Car");
                });

            modelBuilder.Entity("Rentrides_hexa.Model.Refund", b =>
                {
                    b.HasOne("Rentrides_hexa.Model.Rented_Car", "Rented_Car")
                        .WithMany()
                        .HasForeignKey("Rental_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rented_Car");
                });

            modelBuilder.Entity("Rentrides_hexa.Model.Rented_Car", b =>
                {
                    b.HasOne("Rentrides_hexa.Model.Car_Details", "Car_Details")
                        .WithMany("Rented_Car")
                        .HasForeignKey("Car_Id");

                    b.HasOne("Rentrides_hexa.Model.Customers", "Customer")
                        .WithMany("Rented_Car")
                        .HasForeignKey("Customer_ID");

                    b.Navigation("Car_Details");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Rentrides_hexa.Model.Returned_Car", b =>
                {
                    b.HasOne("Rentrides_hexa.Model.Rented_Car", "Rented_Car")
                        .WithMany("Returned_Car")
                        .HasForeignKey("Rental_Id");

                    b.Navigation("Rented_Car");
                });

            modelBuilder.Entity("Rentrides_hexa.Model.User_Feedback", b =>
                {
                    b.HasOne("Rentrides_hexa.Model.Car_Details", "Car_Details")
                        .WithMany("User_Feedback")
                        .HasForeignKey("Car_Id");

                    b.HasOne("Rentrides_hexa.Model.Customers", "Customer")
                        .WithMany("User_Feedback")
                        .HasForeignKey("Customer_Id");

                    b.Navigation("Car_Details");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Rentrides_hexa.Model.Car_Details", b =>
                {
                    b.Navigation("Rented_Car");

                    b.Navigation("User_Feedback");
                });

            modelBuilder.Entity("Rentrides_hexa.Model.Customers", b =>
                {
                    b.Navigation("Rented_Car");

                    b.Navigation("User_Feedback");
                });

            modelBuilder.Entity("Rentrides_hexa.Model.Rented_Car", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Payments");

                    b.Navigation("Returned_Car");
                });
#pragma warning restore 612, 618
        }
    }
}
